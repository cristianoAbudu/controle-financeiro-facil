{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from \"expo-constants\";\nimport * as SQLite from \"expo-sqlite\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction openDatabase() {\n  console.log(\"openDatabase()\");\n  if (Platform.OS === \"web\") {\n    return {\n      transaction: function transaction() {\n        return {\n          executeSql: function executeSql() {}\n        };\n      }\n    };\n  }\n  var db = SQLite.openDatabase(\"db.db\");\n  return db;\n}\nvar db = openDatabase();\nfunction Items(_ref) {\n  var doneHeading = _ref.done,\n    onPressItem = _ref.onPressItem;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  console.log(\"Items()\");\n  useEffect(function () {\n    console.log(\"doneHeading: \" + doneHeading);\n    db.transaction(function (tx) {\n      tx.executeSql(`select * from despesas where categoria = ?;`, [doneHeading], function (_, _ref2) {\n        var _array = _ref2.rows._array;\n        return setItems(_array);\n      });\n    });\n  }, []);\n  var heading = \"Despesas de \" + doneHeading;\n  if (items === null || items.length === 0) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.sectionContainer,\n    children: [_jsx(Text, {\n      style: styles.sectionHeading,\n      children: heading\n    }), items.map(function (_ref3) {\n      var id = _ref3.id,\n        done = _ref3.done,\n        value = _ref3.value,\n        data = _ref3.data,\n        valor = _ref3.valor;\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onPressItem && onPressItem(id);\n        },\n        style: {\n          backgroundColor: done ? \"#1c9963\" : \"#fff\",\n          borderColor: \"#000\",\n          borderWidth: 1,\n          padding: 8\n        },\n        children: _jsxs(View, {\n          style: styles.flexRow,\n          children: [_jsxs(Text, {\n            children: [Moment(data).format('DD/MM/yyyy'), \" - \"]\n          }), _jsx(Text, {\n            children: valor.toLocaleString('pt-BR', {\n              style: 'currency',\n              currency: 'BRL'\n            })\n          }), _jsxs(Text, {\n            children: [value ? \" - \" + value : \"\", \" \"]\n          })]\n        })\n      }, id);\n    })]\n  });\n}\nexport default function App() {\n  console.log(\"App()\");\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valor = _useState6[0],\n    setValor = _useState6[1];\n  var _useState7 = useState(useForceUpdate()),\n    _useState8 = _slicedToArray(_useState7, 2),\n    forceUpdate = _useState8[0],\n    forceUpdateId = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    open = _useState10[0],\n    setOpen = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    categoria = _useState12[0],\n    setCategoria = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    novaCategoria = _useState14[0],\n    setNovaCategoria = _useState14[1];\n  var _useState15 = useState([{\n      \"label\": \"Aaaa\",\n      \"value\": \"Aaaa\"\n    }]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    categorias = _useState16[0],\n    setCategorias = _useState16[1];\n  Moment.locale('pt-BR');\n  function carregarCategorias() {\n    console.log('carregarCategorias()');\n    db.transaction(function (tx) {\n      tx.executeSql('select * from categoria;', null, function (_, _ref4) {\n        var _array = _ref4.rows._array;\n        console.log(\"categorias: '\" + JSON.stringify(categorias) + \"'\");\n        setCategorias(_array);\n        console.log(\"_array: '\" + JSON.stringify(_array) + \"'\");\n        console.log(\"categorias: '\" + JSON.stringify(categorias) + \"'\");\n      });\n    });\n  }\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"create table if not exists despesas (id integer primary key not null, done int, value text, valor integer, data date, categoria text);\");\n      tx.executeSql(\"create table if not exists categoria (label text, value text);\");\n      carregarCategorias();\n    });\n  }, []);\n  var add = function add(text, valor, categoria) {\n    console.log(\"add =\");\n    console.log(text);\n    console.log(valor);\n    if (valor === null || valor === \"\") {\n      return false;\n    }\n    console.log(\"linha 93\");\n    db.transaction(function (tx) {\n      tx.executeSql(\"insert into despesas (done, value, valor, data, categoria) values (0, ?, ?, CURRENT_TIMESTAMP, ?)\", [text, valor, categoria]);\n      tx.executeSql(\"select * from despesas where categoria = ?\", [categoria], function (_, _ref5) {\n        var rows = _ref5.rows;\n        return console.log(JSON.stringify(rows));\n      });\n    }, function (e) {\n      console.log(e);\n    }, forceUpdate);\n    console.log(\"linha 106\");\n  };\n  var addCategoria = function addCategoria(novaCategoria) {\n    console.log(\"addCategoria =\" + novaCategoria);\n    if (novaCategoria === null || novaCategoria === \"\") {\n      return false;\n    }\n    db.transaction(function (tx) {\n      tx.executeSql(\"insert into categoria (label, value) values (?, ?)\", [novaCategoria, novaCategoria], function (_, _ref6) {\n        \"ADICIONADO COM SUCESSO\";\n\n        var rows = _ref6.rows;\n      });\n      tx.executeSql(\"select * from categoria\", [], function (_, _ref7) {\n        var rows = _ref7.rows;\n        setCategoria(rows);\n      });\n    }, function (e) {\n      console.log(e);\n    }, forceUpdate);\n    console.log(\"linha 106\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Controle Financeiro F\\xE1cil\"\n    }), Platform.OS === \"web\" ? _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        style: styles.heading,\n        children: \"Expo SQlite is not supported on web!\"\n      })\n    }) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        children: [_jsx(DropDownPicker, {\n          open: open,\n          value: categoria,\n          setOpen: setOpen,\n          setValue: setCategoria,\n          items: categorias.map(function (option) {\n            return {\n              label: option.name,\n              value: option.id\n            };\n          })\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(valor) {\n            return setValor(valor);\n          },\n          placeholder: \"Valor (R$)\",\n          style: styles.input,\n          value: valor,\n          keyboardType: \"numeric\"\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(text) {\n            return setText(text);\n          },\n          placeholder: \"Descri\\xE7\\xE3o\",\n          style: styles.input,\n          value: text\n        }), _jsx(Button, {\n          title: \"OK\",\n          onPress: function onPress() {\n            add(text, valor, categoria);\n            setValor(null);\n            setText(null);\n          }\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(novaCategoria) {\n            return setNovaCategoria(novaCategoria);\n          },\n          placeholder: \"Categoria\",\n          style: styles.input,\n          value: novaCategoria\n        }), _jsx(Button, {\n          title: \"OK\",\n          onPress: function onPress() {\n            addCategoria(novaCategoria);\n            setNovaCategoria(null);\n            carregarCategorias();\n            console.log(categorias);\n          }\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.listArea,\n        children: _jsx(Items, {\n          done: categoria\n        }, `forceupdate-todo-${forceUpdateId}`)\n      })]\n    })]\n  });\n}\nfunction useForceUpdate() {\n  console.log(\"useForceUpdate()\");\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    value = _useState18[0],\n    setValue = _useState18[1];\n  return [function () {\n    return setValue(value + 1);\n  }, value];\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    flex: 1,\n    paddingTop: Constants.statusBarHeight\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  flexRow: {\n    flexDirection: \"row\"\n  },\n  input: {\n    borderColor: \"#4630eb\",\n    borderRadius: 4,\n    borderWidth: 1,\n    height: 48,\n    margin: 16,\n    padding: 8\n  },\n  listArea: {\n    backgroundColor: \"#f0f0f0\",\n    flex: 1,\n    paddingTop: 16\n  },\n  sectionContainer: {\n    marginBottom: 16,\n    marginHorizontal: 16\n  },\n  sectionHeading: {\n    fontSize: 18,\n    marginBottom: 8\n  }\n});","map":{"version":3,"names":["useState","useEffect","Platform","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","Button","Constants","SQLite","DropDownPicker","Moment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","openDatabase","console","log","OS","transaction","executeSql","db","Items","_ref","doneHeading","done","onPressItem","_useState","_useState2","_slicedToArray","items","setItems","tx","_","_ref2","_array","rows","heading","length","style","styles","sectionContainer","children","sectionHeading","map","_ref3","id","value","data","valor","onPress","backgroundColor","borderColor","borderWidth","padding","flexRow","format","toLocaleString","currency","App","_useState3","_useState4","text","setText","_useState5","_useState6","setValor","_useState7","useForceUpdate","_useState8","forceUpdate","forceUpdateId","_useState9","_useState10","open","setOpen","_useState11","_useState12","categoria","setCategoria","_useState13","_useState14","novaCategoria","setNovaCategoria","_useState15","_useState16","categorias","setCategorias","locale","carregarCategorias","_ref4","JSON","stringify","add","_ref5","e","addCategoria","_ref6","_ref7","container","flex","justifyContent","alignItems","setValue","option","label","name","onChangeText","placeholder","input","keyboardType","title","listArea","_useState17","_useState18","create","paddingTop","statusBarHeight","fontSize","fontWeight","textAlign","flexDirection","borderRadius","height","margin","marginBottom","marginHorizontal"],"sources":["C:/Users/jmr27/ProjetosReactNative/controle-financeiro-facil/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  Button,\r\n} from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport * as SQLite from \"expo-sqlite\";\r\n\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport Moment from 'moment';\r\n\r\n\r\nfunction openDatabase() {\r\n  console.log(\"openDatabase()\");\r\n\r\n  if (Platform.OS === \"web\") {\r\n    return {\r\n      transaction: () => {\r\n        return {\r\n          executeSql: () => {},\r\n        };\r\n      },\r\n    };\r\n  }\r\n\r\n  const db = SQLite.openDatabase(\"db.db\");\r\n  return db;\r\n}\r\n\r\nconst db = openDatabase();\r\n\r\nfunction Items({ done: doneHeading, onPressItem })  { const [items, setItems] = useState(null);\r\n  console.log(\"Items()\");\r\n  useEffect(() => {\r\n    console.log(\"doneHeading: \"+doneHeading);\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        `select * from despesas where categoria = ?;`,\r\n        [doneHeading],\r\n        (_, { rows: { _array } }) => setItems(_array)\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const heading = \"Despesas de \"+doneHeading;\r\n\r\n  if (items === null || items.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    \r\n    <View style={styles.sectionContainer}>\r\n      <Text style={styles.sectionHeading}>{heading}</Text>\r\n      {items.map(({ id, done, value, data, valor }) => (\r\n        <TouchableOpacity\r\n          key={id}\r\n          onPress={() => onPressItem && onPressItem(id)}\r\n          style={{\r\n            backgroundColor: done ? \"#1c9963\" : \"#fff\",\r\n            borderColor: \"#000\",\r\n            borderWidth: 1,\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <View style={styles.flexRow}>\r\n            <Text>{Moment(data).format('DD/MM/yyyy')} - </Text> \r\n            <Text>{valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}</Text> \r\n            <Text>{value? \" - \"+value : \"\"} </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  console.log(\"App()\");\r\n  const [text, setText] = useState(null);\r\n  const [valor, setValor] = useState(null);\r\n\r\n  const [forceUpdate, forceUpdateId] = useState(useForceUpdate());\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [categoria, setCategoria] = useState(null);\r\n  const [novaCategoria, setNovaCategoria] = useState(null);\r\n  const [categorias, setCategorias] = useState([{\"label\":\"Aaaa\",\"value\":\"Aaaa\"}]);\r\n \r\n  Moment.locale('pt-BR'); \r\n\r\n  function carregarCategorias() {\r\n    console.log('carregarCategorias()')\r\n    db.transaction((tx) => {\r\n    tx.executeSql(\r\n      'select * from categoria;', \r\n      null,\r\n      (_, { rows: { _array } }) => {\r\n        console.log(\"categorias: '\" + JSON.stringify(categorias) + \"'\") \r\n        setCategorias(_array);\r\n        //useState(categorias, _array)  \r\n        console.log(\"_array: '\" + JSON.stringify(_array) + \"'\")\r\n        console.log(\"categorias: '\" + JSON.stringify(categorias) + \"'\")\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    db.transaction((tx) => {\r\n      //tx.executeSql(\r\n      //  \"drop table despesas;\"\r\n      //);\r\n      tx.executeSql(\r\n        \"create table if not exists despesas (id integer primary key not null, done int, value text, valor integer, data date, categoria text);\"\r\n      );\r\n      //tx.executeSql(\"drop table categoria;\" );\r\n      tx.executeSql(\r\n        \"create table if not exists categoria (label text, value text);\"\r\n      );\r\n      carregarCategorias()\r\n    });\r\n  }, []);\r\n\r\n  const add = (text, valor, categoria) => {\r\n    console.log(\"add =\");\r\n\r\n    // is valor empty?\r\n    console.log(text)\r\n    console.log(valor)\r\n    if (valor === null || valor === \"\") {\r\n      return false;\r\n    }\r\n    console.log(\"linha 93\")\r\n\r\n    db.transaction(\r\n      (tx) => {\r\n        tx.executeSql(\"insert into despesas (done, value, valor, data, categoria) values (0, ?, ?, CURRENT_TIMESTAMP, ?)\", [text, valor, categoria]);\r\n        tx.executeSql(\"select * from despesas where categoria = ?\", [categoria], (_, { rows }) =>\r\n          console.log(JSON.stringify(rows))\r\n        );\r\n      },\r\n      (e) => {console.log(e)},\r\n      forceUpdate\r\n    );\r\n\r\n    console.log(\"linha 106\")\r\n\r\n  };\r\n\r\n  const addCategoria = (novaCategoria) => {\r\n    console.log(\"addCategoria =\"+novaCategoria);\r\n\r\n    if (novaCategoria === null || novaCategoria === \"\") {\r\n      return false;\r\n    }\r\n\r\n    // Fazer select para ver se ja nao existe uma categoria com mesmo nome\r\n\r\n    db.transaction(\r\n      (tx) => {\r\n        tx.executeSql(\r\n          \"insert into categoria (label, value) values (?, ?)\", \r\n          [novaCategoria, novaCategoria],\r\n          (_, { rows }) => {\r\n            \"ADICIONADO COM SUCESSO\"\r\n          }\r\n        );\r\n        tx.executeSql(\r\n          \"select * from categoria\", \r\n          [], \r\n          (_, { rows }) => {\r\n            setCategoria(rows) \r\n          }\r\n        );\r\n      },\r\n      (e) => {console.log(e)},\r\n      forceUpdate\r\n    );\r\n\r\n    console.log(\"linha 106\")\r\n\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Controle Financeiro Fácil</Text>\r\n\r\n      {Platform.OS === \"web\" ? (\r\n        <View\r\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n        >\r\n          <Text style={styles.heading}>\r\n            Expo SQlite is not supported on web!\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <>\r\n          <View>\r\n            \r\n            <DropDownPicker\r\n              open={open}\r\n              value={categoria}\r\n              setOpen={setOpen}\r\n              setValue={setCategoria}\r\n              items={categorias.map((option) => ({\r\n                label: option.name,\r\n                value: option.id,\r\n              }))}\r\n            />\r\n            <TextInput\r\n              onChangeText={(valor) => setValor(valor)}\r\n              placeholder=\"Valor (R$)\"\r\n              style={styles.input}\r\n              value={valor}\r\n              keyboardType=\"numeric\"\r\n            />\r\n            <TextInput\r\n              onChangeText={(text) => setText(text)}\r\n              placeholder=\"Descrição\"\r\n              style={styles.input}\r\n              value={text}\r\n            />\r\n            \r\n            <Button\r\n              title=\"OK\" \r\n              onPress={() => { \r\n                add(text, valor, categoria)\r\n                setValor(null)\r\n                setText(null)\r\n              }}\r\n            />\r\n\r\n            <TextInput\r\n              onChangeText={(novaCategoria) => setNovaCategoria(novaCategoria)}\r\n              placeholder=\"Categoria\"\r\n              style={styles.input}\r\n              value={novaCategoria}\r\n            />\r\n            \r\n            <Button\r\n              title=\"OK\"\r\n              onPress={() => {\r\n                addCategoria(novaCategoria)\r\n                setNovaCategoria(null)\r\n                carregarCategorias()\r\n                console.log(categorias)\r\n              }}\r\n            />\r\n          </View>\r\n          <ScrollView style={styles.listArea}>\r\n            <Items\r\n              key={`forceupdate-todo-${forceUpdateId}`}\r\n              done={categoria}\r\n            />\r\n          </ScrollView>\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction useForceUpdate() {\r\n  console.log(\"useForceUpdate()\");\r\n\r\n  const [value, setValue] = useState(0);\r\n  return [() => setValue(value + 1), value];\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n    flex: 1,\r\n    paddingTop: Constants.statusBarHeight,\r\n  },\r\n  heading: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  flexRow: {\r\n    flexDirection: \"row\",\r\n  },\r\n  input: {\r\n    borderColor: \"#4630eb\",\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n    height: 48,\r\n    margin: 16,\r\n    padding: 8,\r\n  },\r\n  listArea: {\r\n    backgroundColor: \"#f0f0f0\",\r\n    flex: 1,\r\n    paddingTop: 16,\r\n  },\r\n  sectionContainer: {\r\n    marginBottom: 16,\r\n    marginHorizontal: 16,\r\n  },\r\n  sectionHeading: {\r\n    fontSize: 18,\r\n    marginBottom: 8,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}